{"version":3,"sources":["NewsFeed/reducer.tsx","NewsFeed/newsFeedContext.tsx","NewsFeed/PostInput/index.tsx","NewsFeed/Timeline/components/PostBox/index.tsx","NewsFeed/Timeline/index.tsx","NewsFeed/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["initialState","posts","postReducer","state","action","type","post","newArray","filter","id","currentPost","favProp","favorite","NewsFeedContext","createContext","NewsFeedProvider","children","useReducer","providerValue","feedState","feedDispatch","Provider","value","PostInput","useContext","inputRef","createRef","Box","my","ref","onSubmit","e","preventDefault","Date","now","content","target","current","reset","handleSubmit","TextField","multiline","variant","rows","fullWidth","mt","display","justifyContent","Button","color","disableElevation","PostBox","props","deleteAction","IconButton","onClick","Grid","item","Card","CardHeader","CardContent","Typography","align","Divider","CardActions","Timeline","console","log","spacing","container","direction","length","sort","b","a","map","index","NewsFeed","Container","maxWidth","component","gutterBottom","Link","href","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c7efcd1.chunk.js","sourcesContent":["export type Post = {\r\n\tid: number;\r\n\tcontent: String;\r\n\tfavorite: Boolean;\r\n};\r\n\r\ntype Action = {\r\n\ttype: String;\r\n\tpost: {\r\n\t\tid: number;\r\n\t\tcontent: String;\r\n\t};\r\n};\r\n\r\nexport const initialState: Object = {\r\n\tposts: [],\r\n};\r\n\r\nexport const postReducer = (state: any, action: Action) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"add\":\r\n\t\t\treturn { ...state, posts: [...state.posts, action.post] };\r\n\t\tcase \"delete\":\r\n\t\t\tconst newArray = state.posts.filter(\r\n\t\t\t\t(post: any) => post.id !== action.post.id\r\n\t\t\t);\r\n\t\t\treturn { ...state, posts: newArray };\r\n\t\tcase \"toggleFavorite\":\r\n\t\t\tconst currentPost = state.posts.filter(\r\n\t\t\t\t(post: Post) => post.id === action.post.id\r\n\t\t\t);\r\n\t\t\tlet favProp = currentPost[0].favorite;\r\n\t\t\tcurrentPost[0].favorite = !favProp;\r\n\t\t\treturn { ...state };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import React, { createContext, useReducer } from \"react\";\r\nimport { postReducer, initialState } from \"./reducer\";\r\n\r\nexport const NewsFeedContext: any = createContext(null);\r\n\r\nexport const NewsFeedProvider: React.FC = ({ children }) => {\r\n\tconst [state, dispatch] = useReducer(postReducer, initialState);\r\n\r\n\tconst providerValue: Object = {\r\n\t\tfeedState: state,\r\n\t\tfeedDispatch: dispatch,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<NewsFeedContext.Provider value={providerValue}>\r\n\t\t\t{children}\r\n\t\t</NewsFeedContext.Provider>\r\n\t);\r\n};\r\n","import React, { useContext, createRef } from \"react\";\r\nimport { NewsFeedContext } from \"../newsFeedContext\";\r\nimport { Button, TextField, Box } from \"@material-ui/core\";\r\n\r\nconst PostInput = () => {\r\n\tconst { feedDispatch } = useContext(NewsFeedContext);\r\n\tconst inputRef: any = createRef();\r\n\r\n\tconst handleSubmit = (e: any) => {\r\n\t\te.preventDefault();\r\n\t\tfeedDispatch({\r\n\t\t\ttype: \"add\",\r\n\t\t\tpost: {\r\n\t\t\t\tid: Date.now(),\r\n\t\t\t\tcontent: e.target[0].value,\r\n\t\t\t\tfavorite: false,\r\n\t\t\t},\r\n\t\t});\r\n\t\tinputRef.current.reset();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Box my={2}>\r\n\t\t\t<form ref={inputRef} onSubmit={(e) => handleSubmit(e)}>\r\n\t\t\t\t<TextField multiline variant=\"outlined\" rows={4} fullWidth />\r\n\t\t\t\t<Box mt={1} display=\"flex\" justifyContent=\"flex-end\">\r\n\t\t\t\t\t<Button color=\"primary\" type=\"reset\">\r\n\t\t\t\t\t\tReset\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\tdisableElevation\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tPublish\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Box>\r\n\t\t\t</form>\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\nexport default PostInput;\r\n","import { useContext } from \"react\";\r\nimport { NewsFeedContext } from \"../../../newsFeedContext\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\n\r\nimport {\r\n\tGrid,\r\n\tCard,\r\n\tCardHeader,\r\n\tCardContent,\r\n\tCardActions,\r\n\tDivider,\r\n\tTypography,\r\n\tIconButton,\r\n} from \"@material-ui/core\";\r\nimport { Post } from \"../../../reducer\";\r\n\r\nconst PostBox = (props: { post: Post }) => {\r\n\tconst { feedDispatch } = useContext(NewsFeedContext);\r\n\tconst { content } = props.post;\r\n\r\n\tconst deleteAction = (\r\n\t\t<IconButton\r\n\t\t\tonClick={() => feedDispatch({ type: \"delete\", post: props.post })}\r\n\t\t>\r\n\t\t\t<DeleteIcon />\r\n\t\t</IconButton>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Grid item>\r\n\t\t\t<Card variant=\"outlined\">\r\n\t\t\t\t<CardHeader action={deleteAction} />\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<Typography align=\"left\">{content}</Typography>\r\n\t\t\t\t</CardContent>\r\n\t\t\t\t<Divider />\r\n\t\t\t\t<CardActions>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\tfeedDispatch({ type: \"toggleFavorite\", post: props.post })\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{props.post.favorite ? <FavoriteIcon /> : <FavoriteBorderIcon />}\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</CardActions>\r\n\t\t\t</Card>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nexport default PostBox;\r\n","import { useContext } from \"react\";\r\nimport { NewsFeedContext } from \"../newsFeedContext\";\r\nimport { Post } from \"../reducer\";\r\nimport PostBox from \"./components/PostBox\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst Timeline = () => {\r\n\tconst { feedState } = useContext(NewsFeedContext);\r\n\tconsole.log(\"coekie\", feedState);\r\n\r\n\treturn (\r\n\t\t<Grid spacing={2} container direction=\"column\">\r\n\t\t\t{feedState.posts.length > 0 &&\r\n\t\t\t\tfeedState.posts\r\n\t\t\t\t\t.sort((b: Post, a: Post) => b.id - a.id)\r\n\t\t\t\t\t.map((post: Post, index: number) => (\r\n\t\t\t\t\t\t<PostBox key={index} post={post} />\r\n\t\t\t\t\t))}\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nexport default Timeline;\r\n","import PostInput from \"./PostInput\";\r\nimport Timeline from \"./Timeline\";\r\nimport { NewsFeedProvider } from \"./newsFeedContext\";\r\nimport { Box, Container, Link, Typography } from \"@material-ui/core\";\r\n\r\nconst NewsFeed = () => (\r\n\t<Container maxWidth=\"sm\">\r\n\t\t<NewsFeedProvider>\r\n\t\t\t<Box mt={2}>\r\n\t\t\t\t<Typography align=\"center\" variant=\"h4\" component=\"h1\" gutterBottom>\r\n\t\t\t\t\tNews Feed Example\r\n\t\t\t\t</Typography>\r\n\t\t\t</Box>\r\n\t\t\t<Typography\r\n\t\t\t\talign=\"center\"\r\n\t\t\t\tcolor=\"textSecondary\"\r\n\t\t\t\tcomponent=\"p\"\r\n\t\t\t\tgutterBottom\r\n\t\t\t>\r\n\t\t\t\tThis project uses React Hooks in order to render and manage the state of\r\n\t\t\t\ta simple news feed and its posts.\r\n\t\t\t</Typography>\r\n\t\t\t<Typography\r\n\t\t\t\talign=\"center\"\r\n\t\t\t\tcolor=\"textSecondary\"\r\n\t\t\t\tvariant=\"overline\"\r\n\t\t\t\tcomponent=\"p\"\r\n\t\t\t\tgutterBottom\r\n\t\t\t>\r\n\t\t\t\tVisit my{\" \"}\r\n\t\t\t\t<Link href=\"https://github.com/stebsnusch\" target=\"_blank\">\r\n\t\t\t\t\tGithub\r\n\t\t\t\t</Link>{\" \"}\r\n\t\t\t\tfor more projects.\r\n\t\t\t</Typography>\r\n\t\t\t<PostInput />\r\n\t\t\t<Timeline />\r\n\t\t</NewsFeedProvider>\r\n\t</Container>\r\n);\r\n\r\nexport default NewsFeed;\r\n","import \"./App.css\";\nimport NewsFeed from \"./NewsFeed\";\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<NewsFeed />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}